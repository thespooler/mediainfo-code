Index: include/FLAC/ordinals.h
===================================================================
RCS file: /cvsroot/flac/flac/include/FLAC/ordinals.h,v
retrieving revision 1.10
diff -u -r1.10 ordinals.h
--- include/FLAC/ordinals.h	2 Sep 2004 04:45:03 -0000	1.10
+++ include/FLAC/ordinals.h	3 Sep 2004 18:02:36 -0000
@@ -32,14 +32,14 @@
 #ifndef FLAC__ORDINALS_H
 #define FLAC__ORDINALS_H
 
-#ifndef _MSC_VER
+#if !defined _MSC_VER && !defined __BORLANDC__
 #include <inttypes.h>
 #endif
 
 typedef signed char FLAC__int8;
 typedef unsigned char FLAC__uint8;
 
-#if defined _MSC_VER
+#if defined _MSC_VER || defined __BORLANDC__
 typedef __int16 FLAC__int16;
 typedef __int32 FLAC__int32;
 typedef __int64 FLAC__int64;
Index: include/FLAC++/decoder.h
===================================================================
RCS file: /cvsroot/flac/flac/include/FLAC++/decoder.h,v
retrieving revision 1.22
diff -u -r1.22 decoder.h
--- include/FLAC++/decoder.h	30 Jul 2004 00:02:33 -0000	1.22
+++ include/FLAC++/decoder.h	3 Sep 2004 18:39:52 -0000
@@ -141,7 +141,7 @@
 			virtual void metadata_callback(const ::FLAC__StreamMetadata *metadata) = 0;
 			virtual void error_callback(::FLAC__StreamDecoderErrorStatus status) = 0;
 
-#if (defined _MSC_VER) || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
+#if (defined _MSC_VER) || defined __BORLANDC__ || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
 			// lame hack: some MSVC/GCC versions can't see a protected decoder_ from nested State::resolved_as_cstring()
 			friend State;
 #endif
@@ -236,7 +236,7 @@
 			virtual void metadata_callback(const ::FLAC__StreamMetadata *metadata) = 0;
 			virtual void error_callback(::FLAC__StreamDecoderErrorStatus status) = 0;
 
-#if (defined _MSC_VER) || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
+#if (defined _MSC_VER) || defined __BORLANDC__ || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
 			// lame hack: some MSVC/GCC versions can't see a protected decoder_ from nested State::resolved_as_cstring()
 			friend State;
 #endif
@@ -329,7 +329,7 @@
 			virtual void metadata_callback(const ::FLAC__StreamMetadata *metadata) = 0;
 			virtual void error_callback(::FLAC__StreamDecoderErrorStatus status) = 0;
 
-#if (defined _MSC_VER) || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
+#if (defined _MSC_VER) || defined __BORLANDC__ || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
 			// lame hack: some MSVC/GCC versions can't see a protected decoder_ from nested State::resolved_as_cstring()
 			friend State;
 #endif
Index: include/FLAC++/encoder.h
===================================================================
RCS file: /cvsroot/flac/flac/include/FLAC++/encoder.h,v
retrieving revision 1.25
diff -u -r1.25 encoder.h
--- include/FLAC++/encoder.h	30 Jul 2004 00:02:33 -0000	1.25
+++ include/FLAC++/encoder.h	3 Sep 2004 18:40:14 -0000
@@ -159,7 +159,7 @@
 			virtual ::FLAC__StreamEncoderWriteStatus write_callback(const FLAC__byte buffer[], unsigned bytes, unsigned samples, unsigned current_frame) = 0;
 			virtual void metadata_callback(const ::FLAC__StreamMetadata *metadata) = 0;
 
-#if (defined _MSC_VER) || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
+#if (defined _MSC_VER) || defined __BORLANDC__ || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
 			// lame hack: some MSVC/GCC versions can't see a protected encoder_ from nested State::resolved_as_cstring()
 			friend State;
 #endif
@@ -259,7 +259,7 @@
 			virtual ::FLAC__SeekableStreamEncoderTellStatus tell_callback(FLAC__uint64 *absolute_byte_offset) = 0;
 			virtual ::FLAC__StreamEncoderWriteStatus write_callback(const FLAC__byte buffer[], unsigned bytes, unsigned samples, unsigned current_frame) = 0;
 
-#if (defined _MSC_VER) || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
+#if (defined _MSC_VER) || defined __BORLANDC__ || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
 			// lame hack: some MSVC/GCC versions can't see a protected encoder_ from nested State::resolved_as_cstring()
 			friend State;
 #endif
@@ -360,7 +360,7 @@
 		protected:
 			virtual void progress_callback(FLAC__uint64 bytes_written, FLAC__uint64 samples_written, unsigned frames_written, unsigned total_frames_estimate);
 
-#if (defined _MSC_VER) || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
+#if (defined _MSC_VER) || defined __BORLANDC__ || (defined __GNUG__ && (__GNUG__ < 2 || (__GNUG__ == 2 && __GNUC_MINOR__ < 96)))
 			// lame hack: some MSVC/GCC versions can't see a protected encoder_ from nested State::resolved_as_cstring()
 			friend State;
 #endif
Index: src/flac/decode.c
===================================================================
RCS file: /cvsroot/flac/flac/src/flac/decode.c,v
retrieving revision 1.82
diff -u -r1.82 decode.c
--- src/flac/decode.c	27 Jul 2004 00:23:35 -0000	1.82
+++ src/flac/decode.c	3 Sep 2004 17:58:20 -0000
@@ -1182,7 +1182,7 @@
 void print_stats(const DecoderSession *decoder_session)
 {
 	if(flac__utils_verbosity_ >= 2) {
-#if defined _MSC_VER || defined __MINGW32__
+#if defined _MSC_VER || defined __MINGW32__ || defined __BORLAND__
 		/* with VC++ you have to spoon feed it the casting */
 		const double progress = (double)(FLAC__int64)decoder_session->samples_processed / (double)(FLAC__int64)decoder_session->total_samples * 100.0;
 #else
Index: src/flac/main.c
===================================================================
RCS file: /cvsroot/flac/flac/src/flac/main.c,v
retrieving revision 1.112
diff -u -r1.112 main.c
--- src/flac/main.c	22 Jul 2004 00:17:53 -0000	1.112
+++ src/flac/main.c	3 Sep 2004 18:02:16 -0000
@@ -28,7 +28,7 @@
 #include <config.h>
 #endif
 
-#if !defined _MSC_VER && !defined __MINGW32__
+#if !defined _MSC_VER && !defined __MINGW32__ &&  !defined __BORLANDC__
 /* unlink is in stdio.h in VC++ */
 #include <unistd.h> /* for unlink() */
 #else
Index: src/libFLAC/lpc.c
===================================================================
RCS file: /cvsroot/flac/flac/src/libFLAC/lpc.c,v
retrieving revision 1.40
diff -u -r1.40 lpc.c
--- src/libFLAC/lpc.c	22 Mar 2004 05:47:26 -0000	1.40
+++ src/libFLAC/lpc.c	3 Sep 2004 18:07:16 -0000
@@ -241,7 +241,7 @@
 #endif
 #endif
 		}
-		*(residual++) = *(data++) - (sum >> lp_quantization);
+		*(residual++) = *(data) - (sum >> lp_quantization);
 	}
 
 	/* Here's a slower but clearer version:
@@ -283,7 +283,7 @@
 			break;
 		}
 #endif
-		*(residual++) = *(data++) - (FLAC__int32)(sum >> lp_quantization);
+		*(residual++) = *(data) - (FLAC__int32)(sum >> lp_quantization);
 	}
 }
 
@@ -323,7 +323,7 @@
 #endif
 #endif
 		}
-		*(data++) = *(residual++) + (sum >> lp_quantization);
+		*(data++) = *(residual) + (sum >> lp_quantization);
 	}
 
 	/* Here's a slower but clearer version:
@@ -365,7 +365,7 @@
 			break;
 		}
 #endif
-		*(data++) = *(residual++) + (FLAC__int32)(sum >> lp_quantization);
+		*(data++) = *(residual) + (FLAC__int32)(sum >> lp_quantization);
 	}
 }
 
Index: src/libFLAC/metadata_iterators.c
===================================================================
RCS file: /cvsroot/flac/flac/src/libFLAC/metadata_iterators.c,v
retrieving revision 1.39
diff -u -r1.39 metadata_iterators.c
--- src/libFLAC/metadata_iterators.c	30 Jul 2004 01:54:29 -0000	1.39
+++ src/libFLAC/metadata_iterators.c	3 Sep 2004 19:11:16 -0000
@@ -37,6 +37,9 @@
 #if defined _MSC_VER || defined __MINGW32__
 #include <sys/utime.h> /* for utime() */
 #include <io.h> /* for chmod() */
+#elif defined __BORLANDC__
+#include <utime.h> /* for utime() */
+#include <io.h> /* for chmod() */
 #else
 #include <sys/types.h> /* some flavors of BSD (like OS X) require this to get time_t */
 #include <utime.h> /* for utime() */
@@ -2893,7 +2896,7 @@
 	srctime.modtime = stats->st_mtime;
 	(void)chmod(filename, stats->st_mode);
 	(void)utime(filename, &srctime);
-#if !defined _MSC_VER && !defined __MINGW32__
+#if !defined _MSC_VER && !defined __MINGW32__ && !defined __BORLANDC__
 	(void)chown(filename, stats->st_uid, -1);
 	(void)chown(filename, -1, stats->st_gid);
 #endif
Index: src/libFLAC/metadata_object.c
===================================================================
RCS file: /cvsroot/flac/flac/src/libFLAC/metadata_object.c,v
retrieving revision 1.27
diff -u -r1.27 metadata_object.c
--- src/libFLAC/metadata_object.c	22 Jul 2004 01:32:00 -0000	1.27
+++ src/libFLAC/metadata_object.c	3 Sep 2004 19:13:18 -0000
@@ -1018,7 +1018,7 @@
 FLAC_API FLAC__bool FLAC__metadata_object_vorbiscomment_entry_matches(const FLAC__StreamMetadata_VorbisComment_Entry *entry, const char *field_name, unsigned field_name_length)
 {
 	const FLAC__byte *eq = (FLAC__byte*)memchr(entry->entry, '=', entry->length);
-#if defined _MSC_VER || defined __MINGW32__
+#if defined _MSC_VER || defined __MINGW32__ || defined __BORLANDC__
 #define FLAC__STRNCASECMP strnicmp
 #else
 #define FLAC__STRNCASECMP strncasecmp
Index: src/libFLAC++/file_encoder.cpp
===================================================================
RCS file: /cvsroot/flac/flac/src/libFLAC++/file_encoder.cpp,v
retrieving revision 1.8
diff -u -r1.8 file_encoder.cpp
--- src/libFLAC++/file_encoder.cpp	23 Jul 2004 05:16:11 -0000	1.8
+++ src/libFLAC++/file_encoder.cpp	3 Sep 2004 18:40:28 -0000
@@ -168,7 +168,7 @@
 		bool File::set_metadata(FLAC::Metadata::Prototype **metadata, unsigned num_blocks)
 		{
 			FLAC__ASSERT(is_valid());
-#ifdef _MSC_VER
+#if defined _MSC_VER || defined __BORLANDC__
 			// MSVC++ can't handle:
 			// ::FLAC__StreamMetadata *m[num_blocks];
 			// so we do this ugly workaround
Index: src/libFLAC++/seekable_stream_encoder.cpp
===================================================================
RCS file: /cvsroot/flac/flac/src/libFLAC++/seekable_stream_encoder.cpp,v
retrieving revision 1.9
diff -u -r1.9 seekable_stream_encoder.cpp
--- src/libFLAC++/seekable_stream_encoder.cpp	23 Jul 2004 05:16:11 -0000	1.9
+++ src/libFLAC++/seekable_stream_encoder.cpp	3 Sep 2004 18:41:00 -0000
@@ -168,7 +168,7 @@
 		bool SeekableStream::set_metadata(FLAC::Metadata::Prototype **metadata, unsigned num_blocks)
 		{
 			FLAC__ASSERT(is_valid());
-#ifdef _MSC_VER
+#if defined _MSC_VER || defined __BORLANDC__
 			// MSVC++ can't handle:
 			// ::FLAC__StreamMetadata *m[num_blocks];
 			// so we do this ugly workaround
Index: src/libFLAC++/stream_encoder.cpp
===================================================================
RCS file: /cvsroot/flac/flac/src/libFLAC++/stream_encoder.cpp,v
retrieving revision 1.8
diff -u -r1.8 stream_encoder.cpp
--- src/libFLAC++/stream_encoder.cpp	23 Jul 2004 05:16:11 -0000	1.8
+++ src/libFLAC++/stream_encoder.cpp	3 Sep 2004 18:41:06 -0000
@@ -169,7 +169,7 @@
 		bool Stream::set_metadata(FLAC::Metadata::Prototype **metadata, unsigned num_blocks)
 		{
 			FLAC__ASSERT(is_valid());
-#ifdef _MSC_VER
+#if defined _MSC_VER || defined __BORLANDC__
 			// MSVC++ can't handle:
 			// ::FLAC__StreamMetadata *m[num_blocks];
 			// so we do this ugly workaround
